version: '3.8'  # Phi√™n b·∫£n c√∫ ph√°p Docker Compose

services:
  # -------------------------------
  # üóÑÔ∏è D·ªãch v·ª• MongoDB (C∆° s·ªü d·ªØ li·ªáu)
  # -------------------------------
  mongo:
    image: mongo:6.0                     # D√πng image ch√≠nh th·ª©c c·ªßa Mongo
    restart: always                      # T·ª± kh·ªüi ƒë·ªông l·∫°i n·∫øu b·ªã l·ªói
    container_name: mongo                # ƒê·∫∑t t√™n container
    ports:
      - "27017:27017"                    # Map port 27017 (host ‚Üî container)
    environment:
      MONGO_INITDB_ROOT_USERNAME: root   # T√™n user root
      MONGO_INITDB_ROOT_PASSWORD: example # M·∫≠t kh·∫©u root
    volumes:
      - mongo_data:/data/db              # L∆∞u d·ªØ li·ªáu ra volume ƒë·ªÉ kh√¥ng m·∫•t khi x√≥a container

  # -------------------------------
  # üêá D·ªãch v·ª• RabbitMQ (Message Broker)
  # -------------------------------
  rabbitmq:
    image: rabbitmq:3-management         # B·∫£n c√≥ giao di·ªán web qu·∫£n l√Ω
    restart: always
    container_name: rabbitmq
    ports:
      - "5672:5672"                      # C·ªïng giao ti·∫øp AMQP
      - "15672:15672"                    # C·ªïng truy c·∫≠p giao di·ªán web
    environment:
      RABBITMQ_DEFAULT_USER: guest       # User m·∫∑c ƒë·ªãnh
      RABBITMQ_DEFAULT_PASS: guest       # Password m·∫∑c ƒë·ªãnh

  # -------------------------------
  # üîê D·ªãch v·ª• Auth (ƒêƒÉng k√Ω / ƒêƒÉng nh·∫≠p)
  # -------------------------------
  auth:
    build: ./auth                        # Build t·ª´ th∆∞ m·ª•c ./auth (ch·ª©a Dockerfile)
    restart: always
    container_name: auth
    ports:
      - "3000:3000"                      # M·ªü port 3000
    environment:
      - MONGODB_AUTH_URI=mongodb://root:example@mongo:27017/auth_db?authSource=admin
      - JWT_SECRET=mySecret123           # Key ƒë·ªÉ m√£ h√≥a JWT
    depends_on:
      - mongo                            # Ch·∫°y sau khi MongoDB s·∫µn s√†ng

  # -------------------------------
  # üì¶ D·ªãch v·ª• Product
  # -------------------------------
  product:
    build: ./product
    restart: always
    container_name: product
    ports:
      - "3001:3001"
    environment:
      - MONGODB_PRODUCT_URI=mongodb://root:example@mongo:27017/product_db?authSource=admin
      - JWT_SECRET=mySecret123
      - RABBITMQ_URI=amqp://rabbitmq:5672  # K·∫øt n·ªëi ƒë·∫øn RabbitMQ
    depends_on:
      - mongo
      - rabbitmq

  # -------------------------------
  # üõí D·ªãch v·ª• Order
  # -------------------------------
  order:
    build: ./order
    restart: always
    container_name: order
    ports:
      - "3002:3002"
    environment:
      - MONGODB_ORDER_URI=mongodb://root:example@mongo:27017/order_db?authSource=admin
      - JWT_SECRET=mySecret123
      - RABBITMQ_URI=amqp://rabbitmq:5672
    depends_on:
      - mongo
      - rabbitmq

  # -------------------------------
  # üåê D·ªãch v·ª• API Gateway
  # -------------------------------
  api-gateway:
    build: ./api-gateway
    restart: always
    container_name: api-gateway
    ports:
      - "3003:3003"                      # M·ªü port cho client truy c·∫≠p
    depends_on:
      - auth
      - product
      - order

# -------------------------------
# üìÇ Volume ƒë·ªÉ l∆∞u d·ªØ li·ªáu Mongo
# -------------------------------
volumes:
  mongo_data:
